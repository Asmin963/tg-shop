from bot import bot
from tools.logger import log
from telebot import types
from config import cfg
from tools import Promo


class PromoPanelMessages:
    def __init__(self):
        self.admin = cfg.ADMINS[0]
        self.bot = bot
        self.register_handlers()

    def register_handlers(self):
        @self.bot.message_handler(commands=['add_promo'], func=lambda m: m.chat.id == self.admin)
        def add_promo_command_handler(message: types.Message):
            self.bot.send_message(message.chat.id,
                                  'üîë *–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:*\n\n`(–ø—Ä–æ–º–æ–∫–æ–¥)` `(–∫–æ–ª-–≤–æ —Ç–æ–∫–µ–Ω–æ–≤)` `(–∫–æ–ª-–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π)`',
                                  parse_mode='Markdown', reply_markup=types.ReplyKeyboardRemove())
            self.bot.register_next_step_handler(message, self.final_add_promo)

        @self.bot.message_handler(commands=['delete_promo'], func=lambda m: m.chat.id == self.admin)
        def add_promo_command_handler(message: types.Message):
            self.bot.send_message(message.chat.id,
                                  'üîë *–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è*',
                                  parse_mode='Markdown', reply_markup=types.ReplyKeyboardRemove())
            self.bot.register_next_step_handler(message, self.delete_promo)

        @self.bot.message_handler(commands=['get_promos'], func=lambda m: m.chat.id == self.admin)
        def add_promo_command_handler(m: types.Message):
            all_promos = [f'`{p}`' for p in Promo.get_promo_codes().keys()]
            if not all_promos:
                bot.send_message(m.chat.id, f'ü§∑‚Äç‚ôÇÔ∏è *–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–º–∫–æ–¥–æ–≤*', parse_mode='Markdown')
                return
            bot.send_message(m.chat.id, f'üéÅ *–°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤:*\n{", ".join(all_promos)}', parse_mode='Markdown')

    def final_add_promo(self, message: types.Message):
        try:
            ms = list(map(str.strip, message.text.split()))
            if len(ms) != 3:
                self.bot.send_message(message.chat.id, '‚ùå *–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç*', parse_mode='Markdown')
                return
            if not ms[1].lstrip('0').isdigit() or not ms[2].lstrip('0').isdigit():
                self.bot.send_message(message.chat.id, '‚ùå *–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç*', parse_mode='Markdown')
                return
            promo, tokens, max_use = ms[0], int(ms[1]), int(ms[2])
            result = Promo.add_promo_code(promo, tokens, max_use)
            if result:
                self.bot.send_message(message.chat.id, f'‚úÖ *–ü—Ä–æ–º–æ–∫–æ–¥* `{promo}` *–Ω–∞* `{tokens}` *–∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –Ω–∞* `{max_use}` *–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω*',
                                     parse_mode='Markdown')
            else:
                if promo in Promo.get_promo_codes():
                    self.bot.send_message(message.chat.id, '‚ùå *–ü—Ä–æ–º–æ–∫–æ–¥ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω*', parse_mode='Markdown')
                    return
                self.bot.send_message(message.chat.id, '‚ùå *–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞*', parse_mode='Markdown')
        except Exception as e:
            log(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞ - {e}', lvl=4)
            self.bot.send_message(message.chat.id, f'‚ùå *–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞:*\n`{e}`', parse_mode='Markdown')

    def delete_promo(self, m):
        try:
            if m.text.strip() not in Promo.get_promo_codes():
                bot.send_message(m.chat.id, f'‚ùå *–ü—Ä–æ–º–æ–∫–æ–¥ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç*', parse_mode='Markdown')
                return
            delete_promo = Promo.remove_promo_code(m.text)
            if not delete_promo:
                self.bot.send_message(m.chat.id, f'‚ùå *–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞*',
                                          parse_mode='Markdown')
                return
            self.bot.send_message(m.chat.id, f'‚úÖ *–ü—Ä–æ–º–æ–∫–æ–¥* `{m.text}` *—É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω*',
                                  parse_mode='Markdown')
        except Exception as e:
            log(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞ - {e}', lvl=4)
            self.bot.send_message(m.chat.id, f'‚ùå *–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞:*\n`{e}`',
                                  parse_mode='Markdown')


promo_panel = PromoPanelMessages()
