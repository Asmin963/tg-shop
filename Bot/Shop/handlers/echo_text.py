from bot import bot
from tools.logger import log
from telebot import types
from database import dbase
from config import cfg
from Bot.Shop import keyboards
from lots_package import products_json


@bot.message_handler(content_types=['text'])
def text_handler(m: types.Message):
    if m.text == 'üë§ –ü—Ä–æ—Ñ–∏–ª—å':
        try:
            bot.delete_message(m.chat.id, m.message_id)
            user = dbase.get_user_column(m.from_user.id)
            bot.send_message(m.chat.id,
                             cfg.PROFILE_MESSAGE.format(user.user_id, user.username, user.register_date.split()[0], user.buys, user.balance),
                             parse_mode='Markdown', reply_markup=keyboards.profile_keyboard)
        except Exception as e:
            log(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: {e}', lvl=2)
    if m.text == 'üìñ –í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏':
        try:
            bot.delete_message(m.chat.id, m.message_id)
            categories = keyboards.categories_all(False if m.chat.id in cfg.ADMINS else True)
            if not categories:
                bot.send_message(m.chat.id, '*üõí –¢–æ–≤–∞—Ä–æ–≤ –Ω–µ—Ç*', parse_mode='Markdown')
                return
            bot.send_message(m.chat.id, '*–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:*', parse_mode='Markdown',
                             reply_markup=categories)
        except Exception as e:
            log(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {e}', lvl=2)
    if m.text == 'üìÑ –ù–∞–ª–∏—á–∏–µ —Ç–æ–≤–∞—Ä–æ–≤':
        try:
            bot.delete_message(m.chat.id, m.message_id)
            message = ""
            for category in products_json.get_categories():
                products = products_json.get_products(category['id'])
                if not products:
                    continue
                message += f"‚ûñ‚ûñ‚ûñ*{category['name']}*‚ûñ‚ûñ‚ûñ\n"
                products = products_json.get_products(category['id'])
                for product in products:
                    message += f"       *{product['name']} | {product['price']} ‚ÇΩ | {product['count']} —à—Ç.*\n"
            if not message:
                message = '*üõí –¢–æ–≤–∞—Ä–æ–≤ –Ω–µ—Ç*'
            bot.send_message(m.chat.id, message, parse_mode='Markdown')
        except Exception as e:
            log(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤: {e}', lvl=2)
    if m.text == 'üÜò –ü–æ–º–æ—â—å':
        try:
            bot.delete_message(m.chat.id, m.message_id)
            bot.send_message(m.chat.id, cfg.HELP_MESSAGE, parse_mode='Markdown')
        except Exception as e:
            log(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏: {e}', lvl=2)
    if m.text == 'üíé –û –º–∞–≥–∞–∑–∏–Ω–µ':
        try:
            bot.delete_message(m.chat.id, m.message_id)
            bot.send_message(m.chat.id, cfg.ABOUT_MESSAGE, parse_mode='Markdown')
        except Exception as e:
            log(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–∞–≥–∞–∑–∏–Ω–µ: {e}', lvl=2)
    if m.text == '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å':
        try:
            bot.delete_message(m.chat.id, m.message_id)
            bot.send_message(m.chat.id, cfg.START_MESSAGE, parse_mode='Markdown', reply_markup=keyboards.main_keyboard)
        except Exception as e:
            log(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}', lvl=2)



