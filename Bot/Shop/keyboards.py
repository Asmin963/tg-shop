from telebot import types
from telebot.types import InlineKeyboardMarkup as K, InlineKeyboardButton as B
from lots_package import products_json, favorite_products
from config import cfg
from tools.logger import log
from Bot.Payment import aaio


main_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2).add(
    types.KeyboardButton(text='üìñ –í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'),
    types.KeyboardButton(text='üìÑ –ù–∞–ª–∏—á–∏–µ —Ç–æ–≤–∞—Ä–æ–≤'),
    types.KeyboardButton(text='üë§ –ü—Ä–æ—Ñ–∏–ª—å'),
    types.KeyboardButton(text='üÜò –ü–æ–º–æ—â—å'),
    types.KeyboardButton(text='üíé –û –º–∞–≥–∞–∑–∏–Ω–µ')
)

profile_keyboard = types.InlineKeyboardMarkup(row_width=2).add(
    types.InlineKeyboardButton(text='üí∏ –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤', callback_data='func=history_orders-count=10'),
    types.InlineKeyboardButton(text='üéÅ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫—É–ø–æ–Ω', callback_data='func=activate_coupon-from=profile'),
    types.InlineKeyboardButton(text='ü§ù –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞', callback_data='func=referal_system-from=profile'),
    types.InlineKeyboardButton(text='‚≠êÔ∏è –ò–∑–±—Ä–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã', callback_data='func=menu_favorite_products-from=profile'),
    types.InlineKeyboardButton(text='üí≥Ô∏è –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å', callback_data='func=refill-from=profile')
)

help_keyboard = types.InlineKeyboardMarkup(row_width=1).add(
    types.InlineKeyboardButton(text='üì© –ù–∞–ø–∏—Å–∞—Ç—å', url=f'https://t.me/arthells')
)

cancel_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True).add(
    types.KeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∏—Ç—å')
)


def categories_all(for_user=False):
    categories = [p for p in products_json.get_categories() if p['products']] if for_user else products_json.get_categories()
    categories_keyboard = types.InlineKeyboardMarkup(row_width=2).add(
        *[types.InlineKeyboardButton(text=category['name'],
                                     callback_data=f'func=open_category-category={category["id"]}') for category
          in
          categories]
    )
    if not categories:
        return False
    else:
        return categories_keyboard


def category_keyboard(category_id, user_id=None):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    :param category_id:
    :return:
    """
    products = products_json.get_products(category_id)
    if user_id and user_id not in cfg.ADMINS:
        products = [p for p in products if p['count'] > 0]
    products_keyboard = (K(row_width=1).add(
        *[B(text=f'{product["name"]} | {product["price"]} ‚ÇΩ | {product["count"]} —à—Ç.',
            callback_data=f'func=open_product-cat={category_id}-prod={product["id"]}') for product in products]).
                         add(B(text='–ù–∞–∑–∞–¥ –∫–æ –≤—Å–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º', callback_data='func=categories_menu-from=category_menu')))
    if user_id and user_id in cfg.ADMINS:
        products_keyboard.add(
            B('‚ùå –£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é', None, f'func=delete_category-cat={category_id}-from=category_menu'))
    return products_keyboard


def product_keyboard(user_id, product_id, category_id, for_only_user=False):
    M = K(row_width=5).add(
        *[B(text=i, callback_data=f'func=buy-cat={category_id}-prod={product_id}-count={i}') for i in range(1, 11)]
    ).add(B(text='üîô –ù–∞–∑–∞–¥', callback_data=f'func=open_category-cat={category_id}')).add(
        B(text='üîô –ù–∞–∑–∞–¥ –∫–æ –≤—Å–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º',
          callback_data='func=categories_menu-from=product_menu')
    )
    if favorite_products.is_favorite(user_id, product_id):
        M.add(B('üóë –£–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ', None, f'func=delete_favorite-cat={category_id}-prod={product_id}'))
        log('–õ–æ—Ç —É–∂–µ –µ—Å—Ç—å –≤ –∏–∑–æ–±—Ä–∞–Ω–Ω–æ–º')
    else:
        M.add(B('‚≠êÔ∏è –î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ', None, f'func=add_favorite-cat={category_id}-prod={product_id}'))
        log('–õ–æ—Ç–∞ –Ω–µ—Ç –≤ –∏–∑–æ–±—Ä–∞–Ω–Ω–æ–º')
    if user_id in cfg.ADMINS and not for_only_user:
        M.row(B('‚ùå –£–¥–∞–ª–∏—Ç—å –ª–æ—Ç', None,
                f'func=delete_prod-cat={category_id}-prod={product_id}-from=prod_menu'),
              B('üì¶ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ç–æ–≤–∞—Ä—ã', None,
                f'func=upload_products-cat={category_id}-prod={product_id}-from=prod_menu'))
        M.row(B('‚öôÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏', None, f'func=edit_product-cat={category_id}-prod={product_id}-from=prod_menu'),
              B('üîë –í—ã–¥–∞—Ç—å —Ç–æ–≤–∞—Ä', None, f'func=send_product-cat={category_id}-prod={product_id}-from=prod_menu'))
    return M


admin_about_keyboard = types.InlineKeyboardMarkup(row_width=1).add(
    types.InlineKeyboardButton(text='‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç', callback_data=f'admin-func=edit_about_text-from=about')
)

hide_keyboard = types.InlineKeyboardMarkup(row_width=1).add(
    types.InlineKeyboardButton(text='üîô –°–∫—Ä—ã—Ç—å', callback_data='hide_keyboard')
)


def keyboard_favorite_products(user_id):
    M = K(row_width=1)
    favorites = favorite_products.get_favorite_products(user_id)
    M.add(*[B(f["name"], None, f'func=favorite_lot-cat={f["category"]}-prod={f["id"]}-from=favorite_menu') for f in favorites])
    M.row(B('üîô –°–∫—Ä—ã—Ç—å', None, 'hide_keyboard'))
    return M


def keyboard_favorite_product(category_id, product_id):
    M = K(row_width=1)
    M = K(row_width=5).add(
        *[B(text=i, callback_data=f'func=buy-cat={category_id}-prod={product_id}-count={i}') for i in range(1, 11)]
    ).add(B(text='–ù–∞–∑–∞–¥', callback_data=f'func=open_category-cat={category_id}-from=favorite_menu')).add(
        B(text='–ù–∞–∑–∞–¥ –∫–æ –≤—Å–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º',
          callback_data='func=categories_menu-from=favorite_menu')
    )
    M.row(B('üóë –£–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ', None, f'func=delete_favorite-cat={category_id}-prod={product_id}-from=favorite_menu'))

    return M


def order_keyboard(order_id, amount, lang, currency, desc):
    url = aaio.generate_payment_link(order_id, amount, currency, desc, lang)
    M = K(row_width=1).add(
        B(text='üöÄ –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ', url=url),
        B(text='‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É', callback_data=f'func=check_status_order-order={order_id}'),
        B(text='‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', callback_data=f'func=cancel_order-order={order_id}')
    )
    return M